# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "fpco/stack-build:lts-14"

variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack-root"

cache:
  paths:
    - .stack-work/
    - .stack-root/

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
# before_script:
#   - apt-get update -yqq
#   - apt-get install -yqq --no-install-recommends build-essential

test:
  script:
    - stack --no-terminal --skip-ghc-check test

deb:
  script:
  - stack --no-terminal --skip-ghc-check install
  - mkdir -p packaging/usr/bin
  - cp ~/.local/bin/die packaging/usr/bin
  - chmod 755 packaging packaging/usr packaging/usr/bin packaging/usr/bin/die
  - chmod 755 packaging/DEBIAN packaging/DEBIAN/p*
  - chmod 644 packaging/DEBIAN/control
  - dpkg-deb -b packaging die.armhf.deb
  artifacts:
    paths:
    - die.armhf.deb

#run:
#  script:
#    - python setup.py bdist_wheel
#    # an alternative approach is to install and run:
#    - pip install dist/*
#    # run the command here
#  artifacts:
#    paths:
#      - dist/*.whl
